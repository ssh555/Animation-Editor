{
  "name": "com.unity.localization",
  "displayName": "Localization",
  "version": "1.5.4",
  "unity": "2019.4",
  "description": "Use the Localization package to easily configure localization settings for your application.\n\nAdd support for multiple languages and regional variants, including:\n\n• String localization: Set different strings to display based on locale. Use the Smart Strings feature to add logic to automatically replace specific strings, such as placeholders and plurals.\n• Asset localization: Use a different asset (such as a texture, model, or audio file) based on a locale.\n• Pseudo-localization: Test how your project will adapt to different localizations at an early stage, before adding your translations.\n• Import and export localization data to XLIFF, CSV and Google Sheets.\n\nAdd localization to your projects using the Localization package to help make your applications more accessible to a wider audience.",
  "keywords": [
    "localization",
    "locale",
    "language"
  ],
  "dependencies": {
    "com.unity.addressables": "1.22.2",
    "com.unity.nuget.newtonsoft-json": "3.0.2"
  },
  "relatedPackages": {
    "com.unity.localization.tests": "1.5.4"
  },
  "_upm": {
    "changelog": "### Fixed\n\n- Fixed an issue where we would remove an asset from Addressables when it was still being used by another entry. ([LOC-1159](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1159))\n- Fixed localized property variant changes not being applied correctly when updating the values via the GameObjectLocalizer inspector. ([LOC-1169](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1169))\n- Fixed LocalizedAsset property drawer not handling Lists of LocalizedAssets. ([LOC-1182](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1182))\n- Fixed possible NullReferenceException due to disposed of SerializedProperties when selecting items in the localized reference picker. ([LOC-1179](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1179))\n- Fixed the Conditional formatter so that it uses the invariant culture when parsing decimal values. ([LOC-1176](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1176))\n- Fixed the LocalizedReference dropdown label not updating when the key was renamed. ([LOC-1165](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1166))\n- Fixed the LocalizedString property drawer so it does not display \"Entry Name\" in the corner. ([LOC-1165](https://issuetracker.unity3d.com/product/unity/issues/guid/LOC-1165))"
  },
  "upmCi": {
    "footprint": "3955a4da2bc7e7e6828273437bed065d87ca840c"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.localization@1.5/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.localization.git",
    "type": "git",
    "revision": "5e39cb8be2051821e233973d43c66ee03ea7668e"
  },
  "samples": [
    {
      "displayName": "Creating Locales",
      "description": "This sample shows how to Locales including custom ones through script.",
      "path": "Samples~/CreatingLocales"
    },
    {
      "displayName": "Loading Strings",
      "description": "This sample shows multiple ways to fetch localized strings from the Localization system.",
      "path": "Samples~/LoadingStrings"
    },
    {
      "displayName": "Language Selection Menu (IMGUI)",
      "description": "This sample shows how to implement a simple language selection menu using IMGUI. The sample also includes an example of overriding the LocalesProvider in order to provide a custom list of available Locales.",
      "path": "Samples~/LocaleMenuIMGUI"
    },
    {
      "displayName": "Language Selection Menu (UGUI)",
      "description": "This sample shows how to implement a simple language selection menu using a UGUI Dropdown.",
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      },
      "path": "Samples~/LocaleMenuUGUI"
    },
    {
      "displayName": "Smart Strings - Persistent Variables",
      "description": "These samples show how Persistent Variables can be used in Smart Strings and how custom variables can be created.",
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      },
      "path": "Samples~/PersistentVariables"
    },
    {
      "displayName": "Preloading Screen",
      "description": "Preloading is a way to ensure that chosen Localization data is immediately available and does not require additional loading. This sample shows how to implement a loading screen to wait for preloading to complete.",
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      },
      "path": "Samples~/PreloadingScreen"
    }
  ]
}
